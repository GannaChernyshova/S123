services:
  server:
    build:
      context: .
      target: development
      args:
        PROFILE: "default"
    ports:
      - 8080:8080
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    environment:
      - 'POSTGRES_HOST=db'
      - 'POSTGRES_PORT=5432'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=postgres'  # Update with your actual password
      - 'POSTGRES_DB=postgres'  # Update with your database name
    develop:
      watch:
        - action: rebuild
          path: .

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres  # Update with your actual password
      POSTGRES_DB: postgres  # Update with your database name
    ports:
      - 5432:5432  # Expose the Postgres port
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
volumes:
  db_data:
    name: todo_db_data